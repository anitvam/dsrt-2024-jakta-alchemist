variables:
  sightRadius: &sightRadius
    formula: 2.0
  agentFrequency: &agent-frequency
    type: LinearVariable
    parameters: [ 1, 0.5, 5, 0.5 ]
  lambdaDeliberate: &lambda-deliberate
    formula: 0.1
  lambda-act: &lambda-act
    formula: lambdaDeliberate
  numberOfDrones: &numberOfDrones
    type: ArbitraryVariable
    parameters: [ 2, 1, 5, 10, 20 ]
  seed: &seed { default: 0, min: 0, max: 99, step: 1 } # 100 samples
  scenario_seed: &scenario_seed { formula: (seed + 31) * seed } # Variable-dependent

seeds: { simulation: *seed, scenario: *scenario_seed }

incarnation: jakta
network-model:
  type: ConnectWithinDistance
  parameters: [ *sightRadius ]

_pool: &leader
  - time-distribution:
      type: JaktaTimeDistribution
      parameters:
        sense:
          type: WeibullTime
          parameters: [ *agent-frequency, 0.2 ]
        deliberate:
          type: ExponentialTime
          parameters: *lambda-deliberate
        act:
          type: ExponentialTime
          parameters: *lambda-act
    program:
      agent-factory: it.unibo.jakta.examples.swarm.LeaderDrone.leader
      parameters: []

_program: &drone
  - time-distribution:
      type: JaktaTimeDistribution
      parameters:
        sense:
          type: WeibullTime
          parameters: [ *agent-frequency, 0.2 ]
        deliberate:
          type: ExponentialTime
          parameters: *lambda-deliberate
        act:
          type: ExponentialTime
          parameters: *lambda-act
    program:
      agent-factory: it.unibo.jakta.examples.swarm.Drone.drone
      parameters: [ ]

deployments:
  - type: Point
    parameters: [ -5.0, -3.0 ]
    programs:
      - *leader
    contents:
      - molecule: leader
        concentration: true
      - molecule: radius
        concentration: 1.0
      - molecule: sightRadius
        concentration: *sightRadius
  - type: Rectangle
    parameters: [ *numberOfDrones, -6.0, -6.0, 6.0, 6.0 ]
    programs:
      - *drone

export:
  - type: CSVExporter
    parameters:
      fileNameRoot: 1-exported-data
      interval: 1.0
      exportPath: data
    data:
      - time
      - type: DistanceError

launcher:
  parameters: 
    batch: [seed, numberOfDrones, agentFrequency]

terminate:
  - type: AfterTime
    parameters: [ 1500 ]
